Question URL: https://exploit.education/nebula/level-16/

Source Code:
#!/usr/bin/env perl

# qw()('quote word') extracts words out of your string using embedded
# whitespace as the delimiter and returns the words as a list.
# This happens at compile time.
# any non-alphanumeric, non-whitespace can replace () such as {}, <>,[]
# "use CGI" vs. "Use CGI qw(:standard)"
# - "use CGI" is for OOP where you need to create a instance like
#    use CGI;
#    my $q = new CGI;
#    $q->redirect('http://www.example.com');
# - "use CGI qw(:standard) is for Function Oriented programming like
#    use CGI qw(:standard);  <= Importing standard functions
#    redirect('http://www.example.com');

# "use CGI qw{param}; => CGI param() function is imported. Call it with the
# name of a form item, and a list of all the values of that form item will be
# returned. param("username") => username form value is returned.
use CGI qw{param};

print "Content-type: text/html\n\n";

sub login {
        $username = $_[0];
        $password = $_[1];

        # "=~" is called Perl binding operator.
        # "=~" operator binds a string expression(left) to a pattern match(m//),
        # substitution (s///), transliteration (tr///) on the right.
        $username =~ tr/a-z/A-Z/;       # conver to uppercase
        $username =~ s/\s.*//;          # strip everything after a space

        @output = `egrep "^$username" /home/flag16/userdb.txt 2>&1`;
        foreach $line (@output) {
                ($usr, $pw) = split(/:/, $line);


                if($pw =~ $password) {
                        return 1;
                }
        }

        return 0;
}

# Return value of sub login{} becomes $_[0]
sub htmlz {
        print("<html><head><title>Login resuls</title></head><body>");
        if($_[0] == 1) {
                print("Your login was accepted<br/>");
        } else {
                print("Your login failed<br/>");
        }
        print("Would you like a cookie?<br/><br/></body></html>\n");
}

htmlz(login(param("username"), param("password")));

